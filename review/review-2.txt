_____________________________________________________________________________
Paper Title: Arc Blanc: a real time ocean simulation framework
Paper Authors: David Algis, Berenger Bramas, Emmanuelle Darles


> *  What kind of paper is this?
>       Survey
>       Experience/Advice/Case Study

The paper's stated aim is to gather in one place building blocks of ocean simulation theory found in literature, and to describe how they interconnect.


> *  Is this a paper that others should read?

Yes.
For example, this paper would be a good starting place for somebody who is new to ocean simulation but wishes to implement a functioning system.
If this is paper's aim, there are two places where it could do better:
a) The paper should be a bit less heavy on hydrodynamic theory details: several equation sequences involving JONSWAP and Donelan-Banner spectra are taken verbatim from quoted references (e.g. Horvath) and are not really used much beyond the page they are on. It does not feel like the minute details of the spectrum derivation and empirical coefficients involved contributes much to understanding of the general theory (at least not from the jcgt perspective, but I might be wrong?)
b) give more detail on the actual implementation: memory layout on the GPU, implementation of the kernels etc. This is especially relevant since performance timing is given in Sec 5 of the paper, but the rest of the paper gives us little idea as to why these number are such as they are. For example, the bottleneck in Fig 14 seems to be geometry and force computation (intersection geometry computation). Why should this be so slow?

More details are mentioned below.

1. 

> *  What is the concrete contribution ("technique") of this paper? 

1. gathering in one place a streamlined details of how to build an ocean simulation system
2. fluid velocity computation optimization: in general, this would involve calculating IFFT at each 3D point of simulation. The paper describes how to save computation by utilizing discretization of depth and interpolation. These velocities are used to calculate fluid and air drag forces for the fluid-solid coupling
3. Lagrange poly approximation to Donelan-Banner spectra normalization factor (eq (17))


> *  How does this technique improve on the existing literature for the
>    topic?

Fluid velocity computation in the Arc Blanc framework is an original optimization - specifically the interpolation method using logarithmic distribution. Also the analysis of interpolation degree using multi-objective optimization to balance fast computation time with accuracy.


> *  Is this paper topical? 
>
Yes, it would be interesting to implement an ocean system using this paper.


> *  Does the paper provide sufficient information for you to deploy
>    the technique?
>
No quite. As mentioned above, the paper should provide more implementation details, specifically with regard to the GPU computation and data layout, specifically to explain the timing numbers in Fig 14, and why some of them seem a bit heavy (e.g. like geometry processing). the paper also mentions that no serious CPU-side computation is used - it would be interesting to know why (e.g. could the geometry processing (intersection curve), which seems to be a bottleneck according to Fig 14, be offloaded to CPU?)


> *  How has the technique been proven or battle-tested? 
>
There are not code repos attached to this paper. But there are a number of animations given which (probably) demonstrate that this system has been implemented?


> *  Evaluate the title and abstract.  How can they be improved to better 
>    explain the take-home contribution of the paper?

Both are fine and to the point.

> *  Rate the quality and level of detail of the exposition as a whole.
>
Mod few typos/grammatical errors, the exposition is clear. 
As I've noted, it would be helpful to tone down some hydrodynamic details (e.g. details on spectra) in favor of more exposition on practical implementation details.

>    Note typos, confusing sections, figures, or ambiguous text. Also
>    note exemplary text and diagrams. Suggest material that could be
>    cut to tighten the focus on the core contribution of the paper.

Sec 1
=====

1.1
---
1st bullet point, (Tex error) here and elsewhere Tessendorf is quoted as 
"Tessendorf (2004) [Tessendorf 1999]" (i.e. reference link and text do not match)

Sec 2
=====

Sec 2.1 - 2.5 are very heavy on hydrodynamics.

For example, starting with eq (5) on p6 all bullet points below on JONSWAP spectrum are straight from page 33 of Horvath (there it is eq 28). There is probably no need to copy this here verbatim, rather than giving a cursory explanation of what the terms of (5) are, a derivation into a more computationally ready form would be better.

The same goes for the details of the usual Donelan-Banner spectrum, specifically eqns (7) - (12), could just refer to Sections 6.0.9 - 6.1 of Horvath. The focus instead could be on approximation in eq (17), which is original, and the conclusion eq (18).

2.2
---

Isn't $k$ locally constant (wrt x,z)? Then could just write 
$$\frac{\partial D_x}{\partial x} = i k_x D_x$$
for the first equation, and similar for the other 4 derivatives. Makes it easier to read and is explicit about computation needed.

2.5
---
Second paragraph p 12. It would be helpful to have some details on memory organization for the NxN tiles, computation efficiency on the GPU, etc - especially since quoting performance numbers in Sec 5, Figure 14.

2.6
---

Paragraph 1, p 13, awkward phrasing "...tied to the wave vector, preventing from any simplifications to reduce the needed calculations."
Maybe ".., preventing any simplifications that could reduce the required calculations."

Para 2, p 14 "First, while the velocity decays exponentially, it relies on a logarithmic similar to..."
should probably be "..., it relies on a logarithmic function similar to..."

Same paragraph, "this function decreases slowly (actually with ln(250 + 1) = 5.5),"
What is the significance of "250 + 1" here?!

Figure 6, vertical scale should probably be logarithmic to make these graphs more informative. As it is now, three of four graphs are scrunched on top of each other.

Not sure why the bracket "{" in eq. (28). Also it does not look like eq (28) is quoted in the rest of the paper, so $\alpha$ and $\beta$ could just be given inline.


Sec 3
=====

3.1
---

3.2.1

p 17. "The Arc Blanc framework uses the prism approximation proposed by Bajo et al."

How? In Bajo et al. paper, the geometry (position & area vector, is stored in texels of the surface textures of the model.) The prisms used there are per texel, so for example the prism height is determined by (average) water height above the projected texel center. How is this done here?

Specifically,

"The principles of their method are as follows: from each submerged triangle $T^s_i$ of the body, a prism is build up to the water surface; hence, each prism volume can be calculated, and so the full submerged volume vw by adding all of them."

This is not exactly correct - their computation is at surface texel granularity level - it is not immediately obvious how this is to be done on triangle basis (e.g. uniform tessellation?)

3.2
---

Sections 3.2.2 and 3.2.3 details are redundant: the only true geometric difference between the two is that in one case we are considering velocity of water while in the other velocity of air (density and drag coefficient being that of the medium under consideration can be understood from context)

Also, p19 Paragraph 2 has a typo: the 3rd and 4th bullets are identical

3.3
---

As above, item 3, it is not clear how to do the volume computation. The paper claims it is triangle based, while the quoted source (Bajo et al) uses surface texel based computation. Does the author imply that some sort of uniform triangulation scheme is to be used? If so, then there is also the matter of closing and triangulating the polygons given by the (approximate) cutting of triangles against the waterline described in paragraph 2 of 3.1 on p 17 by referring to Kerner's paper.

Figure 9, p 20 mentioning c_i, COG, center of submerged part etc, but these are not labeled in the diagram, which produces unnecessary cognitive load when reading the diagram. Also, can spread the vectors a bit to declutter (dont need to have them bunched up so realistically), likewise v_a and v_w are not collinear in general. Larger arrow tips would help.


Sec 4.
=====

4.1
---

Paragraph 1, suggesting change of notation, e.g. $\delta$ instead of $dx$ for the discretization step. This would make (35) (38) (40) (42) less confusing when first seen (e.g. it's not a differential), or $\Delta{x}, \Delta{y}, \Delta{t}$, but that might be a bit too detailed, e.g. since the grid is regular.


Eq (36)  probably it is easier to read something like

$u = clamp_hi(|v|/v_max, 1)$ and $d(t) = lerp(d0, d_max, u)$

than the given piecewise definition.

Numeric values like the ones in eq 37, which affect stability, might be meaningless if some implementation details of the framework are not been specified (e.g. floats, doubles etc)?

4.2
---

A simple diagram showing the relationship between (i,j), (k,l), and (o,p) would make (39) easier to read (e.g. could extend Fig 10 to show this).

4.3 
---

"The value of c is deduced from dx and dt to validate the CFL as follows"

Deduced how? \sqrt(0.49) seems close to \sqrt(0.5) which you would get from Eq (40)?

4.4
---

Last paragraph on p 23, typo: "corresponding to the vertices of Z contained into one intersected polygons." should be "...in one of the intersection polygons"

4.4.1
-----

Paragraph 1, typo: "contained into one intersection polygon" should be "contained in one of the intersection polygons"

The reference to (what I assume is) CLRS listed in the References section is incorrectly written. Also CLRS is too general so probably not needed here. Stabbing ray approach described might have robustness issues - are those significant enough to cause some form of instability in the simulation?

Last sentence of the last paragraph of 4.4.1, typo: "technic"

Also, not explicitly mentioned, but I am guessing that the intersection polygons from sec 3.1 are projected onto xz plane in order to do z-ray stabbing in sec 4.4.1. Could some such projected intersection polygons then be generate (e.g. self intersecting when projected onto zx plane, or inverted - e.g. for turbulent water height and finely tessellated body M)

Also, doing ray stabbing on multiple components probably increases chances of bad classification of a point. Could do closed component count (provided the model M is a closed orientable surface to start with, so the intersection polygons have well-defined interior) to speed up the test.

4.4.2
-----

Sentence 2, paragraph 1, typo: "By construction of the grid Z, M has is bow oriented on the positive side of the z axis and its starboard on the positive side of the x axis."

Should be "..has *its* bow.."?

Also, for landlubbers among us, please clarify "starboard" as "right-hand side when facing the bow" :)

End of the same paragraph:

"Hence, h is made such that from the vertex at position x, the front of the mask is above the free surface and the back below, in a way that is proportional to the speed of M. Moreover, the boat forms a V shape, with its center a bit below the extremity of the side."

I can not visualize this. For example, 

- what is meant here by "front of the mask is above the free surface and the back below"?
- "..the boat forms a V shape.." - does V here mean that the boat is in the shape of the letter "V", or does V denote the shape (object) in question? For example, the sentence before eq (43) says "The function f models the side effect using a shape in V", which suggest the latter, but the next sentence says "The V-shape is obtained from the absolute value of the abscissa" (note the hyphen) which suggest the former.

Can we please have a diagram that shows and explains this geometry configuration clearly - in addition to Fig 11?

Sec 5
=====

Figure 14. XP2 geometry, section 3.1. 4.6 msec for 4153 triangles vertex classification and splitting seems a bit excessive. Same goes for forces computation. This, for example, is why it would be nice to see more implementation details.

Also, an idea: maybe assuming that the intersection shape is more or less the same between two consecutive frames, for low Beaufort state at least, (and for some k steps, where k is small), then recompute the buoyancy/volume based on the previous volume of the submerged shape, correcting for the height difference of the water between the two frames, then on k-th step doing the correct computation?


> *  List objective factual errors or overstatements in the technical
>    content of the paper. Please suggest corrections where possible.

See notes for Sec 3.2.1 and 3.3 above. Also above is a note on potential stability issues for Sec 4.4.1, and a note in Sec 5.


> *  Is the bibliography adequate (not too little or too much)?  
>
More than adequate.


> *  Is the paper ready for shepherding by an editor to incorporate
>    changes requested in this review?
>
Yes, provided some of the changes are done - specifically reducing some of the hydrodynamic spectra material and adding more on implementation details.

>    Could it be made ready for publication with one or more rounds 
>    of improvement guided by an associate editor, but without any 
>    additional external reviews?

Yes.

